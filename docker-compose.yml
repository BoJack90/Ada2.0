services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ada_db
      POSTGRES_USER: ada_user
      POSTGRES_PASSWORD: ada_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ada_user -d ada_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Celery broker and cache
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Application
  web:
    build: .
    restart: unless-stopped
    ports:
      - "8090:8000"
    environment:
      - DATABASE_URL=postgresql://ada_user:ada_password@postgres:5432/ada_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - GOOGLE_AI_API_KEY=${GOOGLE_AI_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    volumes:
      - ./app:/app/app
      - ./tests:/app/tests
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Next.js Frontend
  frontend:
    build: ./frontend
    restart: unless-stopped
    ports:
      - "8081:3000"
    environment:
      - DOCKER_ENV=true
      - NEXT_PUBLIC_API_URL=http://host.docker.internal:8090
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    depends_on:
      - web
    command: npm run dev -- --hostname 0.0.0.0

  # Celery Worker
  celery-worker:
    build: .
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://ada_user:ada_password@postgres:5432/ada_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - GOOGLE_AI_API_KEY=${GOOGLE_AI_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    volumes:
      - ./app:/app/app
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A app.tasks.celery_app worker --loglevel=info

  # Celery Beat (scheduler)
  celery-beat:
    build: .
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://ada_user:ada_password@postgres:5432/ada_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - GOOGLE_AI_API_KEY=${GOOGLE_AI_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    volumes:
      - ./app:/app/app
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A app.tasks.celery_app beat --loglevel=info

volumes:
  postgres_data:
  redis_data:
